name: publish to nuget
on:
  push:
    branches:
      - main # Default release branch, may also be named 'master' or 'develop'
  #pull_request:
  #  branches: [ main ]

jobs:
  publish:
    name: build, pack & publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # restore dependencies  
      - name: Install dependencies
        run: dotnet restore

      # set pr number, if it's a pr build
      - name: set pr build number
        id: PRNUMBER
        if: ${{ github.event_name == 'pull_request' }}
        uses: kkak10/pr-number-action@v1.3

        # set report file and title 
      - name: Set Test Title
        run: | 
            if ${{ github.event_name == 'pull_request' }}
            then
              echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV              
            else
              echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
            fi

      # run tests with built project
      - name: Test PR      
        run: dotnet test -c Release --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
      
        # upload report as build artifact
      #- name: Upload a Build Artifact
      #  uses: actions/upload-artifact@v2
      #  if: ${{always()}}
      #  with:
      #    name: 'Test Run'
      #    path: ${{github.workspace}}/${{env.file_name}}

      #  # add report as PR comment (if PR)
      #- name: comment PR
      #  uses: machine-learning-apps/pr-comment@master
      #  if: ${{ github.event_name == 'pull_request' }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    path: ${{env.file_name}}

      - name: Package
        run: dotnet pack -c Release -o . forms-parse/forms-parse.csproj

      - name: Publish
        run: dotnet nuget push *.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json